#!/bin/bash
#
# This script is used to deploy an application
#

set -e

DEPLOY_ID="<%= deploy_id %>"
SLUG_URL="<%= slug_url %>"
CONFIG=<%= config.to_s.shellescape %>

APP_ROOT=/app
DEPLOY_PATH=$APP_ROOT/deploy/$DEPLOY_ID
CURRENT_PATH=$APP_ROOT/current
SLUG_FILE=$DEPLOY_PATH/`basename "$SLUG_URL" | sed 's/\?.*//'`
CONFIG_FILE=$DEPLOY_PATH/config-file

log() {
  echo "$DEPLOY_ID: $@"
}

fail() {
  echo "$DEPLOY_ID: $@" >&2
  exit 1
}

has() {
  which $1 &>/dev/null
}

lock() {
  local filename=$1
  if has flock ; then
    touch $filename
    exec 200<$filename
    flock -n -e 200
  else # OSX
    shlock -p $$ -f $filename
  fi
}

is_on_ec2() {
  arp | grep fe:ff:ff:ff:ff:ff >/dev/null && wget -nv -t 1 -T 2 --spider http://169.254.169.254/1.0/
}

if [ `id -u` != 0 ]; then
  fail "You need to be root to run this script"
fi

# Make sure that no two scripts are running at the same time.
lock /tmp/deploy.lock || fail "Another deploy is already running"

mkdir -p $APP_ROOT

# If we're on EC2
if is_on_ec2 && ! (mount | grep bind | grep /mnt$APP_ROOT) ; then
  mkdir -p /mnt$APP_ROOT
  mount --bind /mnt$APP_ROOT $APP_ROOT
fi

# Copy itself to the deploy directory for reproductibility
mkdir -p $DEPLOY_PATH
cat $0 > $DEPLOY_PATH/deploy.sh.tmp
chmod +x $DEPLOY_PATH/deploy.sh.tmp
mv $DEPLOY_PATH/deploy.sh.tmp $DEPLOY_PATH/deploy.sh
cd $DEPLOY_PATH

echo "$CONFIG" > $CONFIG_FILE

log Fetching slug "$SLUG_URL"
curl -L -o "$SLUG_FILE" "$SLUG_URL"
tar --no-same-owner -xaf "$SLUG_FILE"

log Install starting
./script/install $CONFIG_FILE

if [ -L $CURRENT_PATH ]; then
  cp -df $CURRENT_PATH $CURRENT_PATH.old
fi

# Atomically link the new release
ln -sf $DEPLOY_PATH $CURRENT_PATH.new
mv -f -T $CURRENT_PATH.new $CURRENT_PATH

log Running post-install script
if [ ! -f $CURRENT_PATH/script/post-install ] || $CURRENT_PATH/script/post-install ; then
  echo Deploy $DEPLOY_ID successful
  if [ -L $CURRENT_PATH.old ]; then
    rm $CURRENT_PATH.old
  fi
else
  echo Deploy $DEPLOY_ID failed
  # Revert link if the post-install didn't work
  if [ -L $CURRENT_PATH.old ]; then
    mv -f -T $CURRENT_PATH.old $CURRENT_PATH
  fi
  false
fi
