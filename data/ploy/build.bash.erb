#!/bin/bash

set -e
cd `dirname $0`

BARE_REPO="<%= source_dir %>"
BASE="ubuntu:precise"
BUILD_DIR=$PWD
BUILD_ID="<%= build_id %>"
CACHE_DIR="<%= cache_dir %>"
COMMIT_ID="<%= commit_id %>"
LAST_CONTAINER=$CACHE_DIR/last_container_id

banner() {
  echo "=========| $@ |========="
}

indent() {
  sed -e 's/^/# /'
}

commit() {
  local exit_status=$(docker wait $ID)
  if [ $exit_status -gt 0 ]; then
    return $exit_status
  fi
  ID=$(docker commit $ID)
  echo $ID > $LAST_CONTAINER
}

mkdir -p $CACHE_DIR
ID=`cat $LAST_CONTAINER || true`
if [ -z "$ID" ]; then
  banner starting from $BASE
  docker pull $BASE
  ID=$BASE
  ID=$(docker run -d "$ID" /bin/sh -c "mkdir -p /cache")
  commit
else
  banner restarting from container $ID
  ID=$(docker run -d "$ID" /bin/sh -c "rm -rf /app /source && mkdir -p /app /source")
  commit
fi

banner prepare commit $COMMIT_ID
ID=$(docker run -d -v "$CACHE_DIR:/cache" -i "$ID" /bin/sh -c "tar -x -C /source")
git --git-dir "$BARE_REPO" archive $COMMIT_ID | docker attach $ID
commit

banner build container $ID
ID=$(docker run -d $ID /bin/sh -c "/source/script/slugify /cache /app")
docker attach $ID | indent
commit

banner export build $BUILD_ID
ARCHIVE=$BUILD_ID.tar.gz
docker run $ID -a stdout /bin/sh -c "cd /app && tar czf - ." > $ARCHIVE
shasum -a 256 $ARCHIVE > $ARCHIVE.sha256
md5sum $ARCHIVE > $ARCHIVE.md5sum
